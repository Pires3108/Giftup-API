services:
  backend:
    build: 
      context: ./APICRUD
      dockerfile: Dockerfile
    container_name: apicrud-backend
    user: "0:0"
    ports:
      - "5000:5000"            # HOST:CONTAINER - corrigido para usar porta 5000
    depends_on:
      db:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:5000
      ConnectionStrings__DefaultConnection: Host=db;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - storage_data:/app/Storage

  frontend:
    build: 
      context: ./giftup-frontend
      dockerfile: Dockerfile
    container_name: apicrud-frontend
    ports:
      - "5173:5173"
    depends_on:
      - backend
    restart: unless-stopped
    environment:
      - VITE_API_URL=http://localhost:5000/api/v1

  db:
    image: postgres:16
    container_name: apicrud-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nicolas -d crud"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  storage_data:
